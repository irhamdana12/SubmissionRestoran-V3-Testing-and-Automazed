{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";0YACA,8hGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACtDI,QADsD,SAC9CC,GACJA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC5D,IA4BL,QAzB8B,CACpBC,SADoB,SACXC,GAAI,oGACVA,EADU,iEAICP,EAJD,uCAIYQ,IAAIT,EAAmBQ,IAJnC,4CAKlB,EACKE,YAPoB,WAON,iHACFT,EADE,uCACSU,OAAOX,IADhB,4CAEnB,EACKY,SAVoB,SAUXC,GAAO,oGAEjBA,EAAMC,eAAe,MAFJ,iEAMNb,EANM,uCAMKc,IAAIf,EAAmBa,IAN5B,4CAOrB,EACKG,YAlBoB,SAkBRR,GAAI,iHACJP,EADI,8CACcD,EAAmBQ,IADjC,4CAErB,EACKS,YArBoB,SAqBRC,GAAO,sIACxB,gDCxBL,QAPqB,CACjBC,KAAM,GAAF,OAAKrB,EAAAA,EAAAA,SAAL,SACJsB,OAAQ,SAACZ,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,mBAAqCU,EAArC,EACRa,OAAQ,SAACC,GAAD,gBAAcxB,EAAAA,EAAAA,SAAd,qBAA0CwB,EAA1C,EACRC,OAAQ,GAAF,OAAKzB,EAAAA,EAAAA,SAAL,+PCLV,4wNA2BA,QA1BM0B,uMACF,sGAC2BC,MAAMC,EAAAA,MADjC,cACUC,EADV,gBAE+BA,EAASC,OAFxC,cAEUC,EAFV,yBAGWA,EAAaC,aAHxB,gIAMA,WAAyBtB,GAAzB,yFAC2BiB,MAAMC,EAAAA,OAAoBlB,IADrD,cACUmB,EADV,gBAE+BA,EAASC,OAFxC,cAEUC,EAFV,yBAGWA,EAAaE,YAHxB,iIAMA,WAAyBT,GAAzB,yFAC2BG,MAAMC,EAAAA,OAAoBJ,IADrD,cACUK,EADV,gBAE+BA,EAASC,OAFxC,cAEUC,EAFV,yBAGWA,EAAaC,aAHxB,iIAMA,sGAC2BL,MAAMC,EAAAA,QADjC,cACUC,EADV,OAEUE,EAAeF,EAASC,OAFlC,kBAGWC,GAHX,wJAnBEL,mCCOJ,QATa,CACXQ,SAAU,sCACVC,WAAY,qDACZC,WAAY,eACZrC,cAAe,sBACfE,iBAAkB,EAClBC,kBAAmB,wECGjBmC,gBAAM,IAAIC,EAAAA,EAAI,CAChBC,QAASC,SAASC,cAAc,YAChCC,KAAMF,SAASC,cAAc,SAC7BE,OAAQH,SAASC,cAAc,WAC/BG,KAAMJ,SAASC,cAAc,WAG/BI,OAAOC,iBAAiB,cAAc,WACpCT,EAAIU,YACL,IAEDF,OAAOC,iBAAiB,QAAQ,WAC9BT,EAAIU,cACJC,EAAAA,EAAAA,IACD","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurants-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n    upgrade(database) {\r\n        database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n    },\r\n});\r\n\r\nconst FavoriteRestaurantIDB = {\r\n    async getResto(id) {\r\n        if (!id) {\r\n            return;\r\n          }\r\n          return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n    },\r\n    async getAllResto() {\r\n        return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n    },\r\n    async putResto(resto) {\r\n        // eslint-disable-next-line no-prototype-builtins\r\n    if (!resto.hasOwnProperty('id')) {\r\n        return;\r\n      }\r\n      // eslint-disable-next-line consistent-return\r\n      return (await dbPromise).put(OBJECT_STORE_NAME, resto);\r\n    },\r\n    async deleteResto(id) {\r\n        return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n    },\r\n    async searchResto(query) {\r\n    },\r\n};\r\n\r\nexport default FavoriteRestaurantIDB;","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n    LIST: `${CONFIG.BASE_URL}/list`,\r\n    DETAIL: (id) => `${CONFIG.BASE_URL}/detail/${id}`,\r\n    SEARCH: (value) => `${CONFIG.BASE_URL}/search?q=${value}`,\r\n    REVIEW: `${CONFIG.BASE_URL}/review`,\r\n};\r\n\r\nexport default API_ENDPOINT;","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantsSource {\r\n    static async listResto() {\r\n        const response = await fetch(API_ENDPOINT.LIST);\r\n        const responseJson = await response.json();\r\n        return responseJson.restaurants;\r\n    }\r\n\r\n    static async detailResto(id) {\r\n        const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n        const responseJson = await response.json();\r\n        return responseJson.restaurant;\r\n    }\r\n\r\n    static async searchResto(value) {\r\n        const response = await fetch(API_ENDPOINT.SEARCH(value));\r\n        const responseJson = await response.json();\r\n        return responseJson.restaurants;\r\n    }\r\n\r\n    static async reviewResto() {\r\n        const response = await fetch(API_ENDPOINT.REVIEW);\r\n        const responseJson = response.json();\r\n        return responseJson;\r\n    }\r\n}\r\n\r\nexport default RestaurantsSource;","const CONFIG = {\r\n    BASE_URL: 'https://restaurant-api.dicoding.dev',\r\n    BASE_IMAGE: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n    CACHE_NAME: 'MariMakan-V1',\r\n    DATABASE_NAME: 'Mari-Makan-database',\r\n    DATABASE_VERSION: 1,\r\n    OBJECT_STORE_NAME: 'restaurants',\r\n  };\r\n\r\n  export default CONFIG;","/* eslint-disable no-unused-vars */\nimport 'regenerator-runtime';\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst app = new App({\n    content: document.querySelector('#content'),\n    menu: document.querySelector('#menu'),\n    drawer: document.querySelector('#drawer'),\n    main: document.querySelector('main'),\n  });\n\n  window.addEventListener('hashchange', () => {\n    app.renderPage();\n  });\n\n  window.addEventListener('load', () => {\n    app.renderPage();\n    swRegister();\n  });"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","id","get","getAllResto","getAll","putResto","resto","hasOwnProperty","put","deleteResto","searchResto","query","LIST","DETAIL","SEARCH","value","REVIEW","RestaurantsSource","fetch","API_ENDPOINT","response","json","responseJson","restaurants","restaurant","BASE_URL","BASE_IMAGE","CACHE_NAME","app","App","content","document","querySelector","menu","drawer","main","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}